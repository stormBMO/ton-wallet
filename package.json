{
  "name": "ton-mvp",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview",
    "test": "vitest"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@jest/globals": "^29.7.0",
    "@reduxjs/toolkit": "^2.8.1",
    "@scure/base": "^1.2.5",
    "@scure/bip32": "^1.7.0",
    "@scure/bip39": "^1.6.0",
    "@ton/crypto": "^3.3.0",
    "@ton/ton": "^15.2.1",
    "@tonconnect/sdk": "^2.0.0",
    "@tonconnect/ui-react": "^2.0.0",
    "axios": "^1.6.7",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "framer-motion": "^12.12.1",
    "jest": "^29.7.0",
    "lucide-react": "^0.510.0",
    "motion": "^12.11.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-icons": "^5.5.0",
    "react-redux": "^9.2.0",
    "react-router-dom": "^6.22.3",
    "redux-persist": "^6.0.0",
    "redux-thunk": "^3.1.0",
    "tailwind-merge": "^3.3.0",
    "tailwindcss-animate": "^1.0.7",
    "tonweb": "^0.0.66"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.4.2",
    "@testing-library/react": "^14.2.1",
    "@types/node": "^22.15.17",
    "@types/react": "^18.2.64",
    "@types/react-dom": "^18.2.21",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitejs/plugin-react": "^4.2.1",
    "autoprefixer": "^10.4.18",
    "buffer": "^6.0.3",
    "eslint": "^8.57.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.5",
    "jsdom": "^24.0.0",
    "postcss": "^8.4.35",
    "process": "^0.11.10",
    "stream-browserify": "^3.0.0",
    "tailwindcss": "^3.4.1",
    "ts-unused-exports": "^11.0.1",
    "typescript": "^5.2.2",
    "util": "^0.12.5",
    "vite": "^5.1.6",
    "vitest": "^1.3.1"
  },
  "eslintConfig": {
    "parserOptions": {
      "project": [
        "./tsconfig.json",
        "./cypress/tsconfig.json"
      ]
    },
    "rules": {
      "quotes": [
        "warn",
        "single",
        {
          "avoidEscape": true,
          "allowTemplateLiterals": false
        }
      ],
      "padding-line-between-statements": [
        "warn",
        {
          "blankLine": "always",
          "prev": [
            "const",
            "let",
            "var"
          ],
          "next": "*"
        },
        {
          "blankLine": "always",
          "prev": "*",
          "next": "return"
        },
        {
          "blankLine": "any",
          "prev": [
            "const",
            "let",
            "var"
          ],
          "next": [
            "const",
            "let",
            "var"
          ]
        }
      ],
      "no-shadow": "off",
      "no-plusplus": [
        "error",
        {
          "allowForLoopAfterthoughts": true
        }
      ],
      "no-negated-condition": "warn",
      "default-case": "off",
      "no-use-before-define": "off",
      "prefer-regex-literals": "off",
      "complexity": [
        "warn",
        20
      ],
      "max-nested-callbacks": "warn",
      "no-restricted-properties": [
        "error",
        {
          "object": "it",
          "property": "only",
          "message": "Did you forget to remove 'only' from this test?"
        },
        {
          "object": "describe",
          "property": "only",
          "message": "Did you forget to remove 'only' from this test?"
        },
        {
          "object": "context",
          "property": "only",
          "message": "Did you forget to remove 'only' from this test?"
        },
        {
          "object": "test",
          "property": "only",
          "message": "Did you forget to remove 'only' from this test?"
        }
      ],
      "react/jsx-fragments": [
        "warn",
        "element"
      ],
      "react/static-property-placement": [
        "error",
        "static public field"
      ],
      "react/state-in-constructor": [
        "error",
        "never"
      ],
      "react/prop-types": "off",
      "react/sort-comp": "off",
      "react/require-default-props": "off",
      "react/jsx-boolean-value": [
        "error",
        "always"
      ],
      "react/jsx-props-no-spreading": "off",
      "react/prefer-stateless-function": "off",
      "react/destructuring-assignment": "off",
      "react/jsx-filename-extension": [
        1,
        {
          "extensions": [
            ".jsx",
            ".tsx"
          ]
        }
      ],
      "react/jsx-one-expression-per-line": "off",
      "react/function-component-definition": "off",
      "jsx-a11y/anchor-is-valid": [
        "warn",
        {
          "aspects": [
            "invalidHref"
          ]
        }
      ],
      "jsx-a11y/label-has-associated-control": [
        "error",
        {
          "labelComponents": [
            "label"
          ],
          "assert": "either"
        }
      ],
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/array-type": [
        "error",
        {
          "default": "array-simple",
          "readonly": "array-simple"
        }
      ],
      "@typescript-eslint/consistent-type-assertions": "error",
      "@typescript-eslint/no-array-constructor": "error",
      "@typescript-eslint/no-empty-interface": "error",
      "@typescript-eslint/no-shadow": "warn",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "ignoreRestSiblings": true
        }
      ],
      "@typescript-eslint/no-use-before-define": [
        "error",
        {
          "functions": false,
          "classes": true,
          "variables": true
        }
      ],
      "@typescript-eslint/default-param-last": "off",
      "import/no-extraneous-dependencies": [
        "error",
        {
          "devDependencies": [
            "**/*.{stories,test,tests,spec}.{js,jsx,ts,tsx}"
          ]
        }
      ],
      "import/no-cycle": "off",
      "import/prefer-default-export": "off",
      "import/no-unresolved": "off",
      "import/extensions": "off",
      "import/no-useless-path-segments": [
        "error",
        {
          "noUselessIndex": true
        }
      ],
      "dirnames/match-kebab-case": "error",
      "unicorn/filename-case": [
        "error",
        {
          "case": "kebabCase"
        }
      ],
      "simple-import-sort/imports": [
        "warn",
        {
          "groups": [
            [
              "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
            ],
            [
              "^react",
              "^redux",
              "^@?\\w"
            ],
            [
              "@alfalab/*",
              "^arui-(feather|private)(/?.*|$)"
            ],
            [
              "^#"
            ],
            [
              "^\\.\\.(?!/?$)",
              "^\\.\\./?$"
            ],
            [
              "^\\./(?=.*/)(?!/?$)",
              "^\\.(?!/?$)",
              "^\\./?$"
            ],
            [
              "^.+\\.s?css$"
            ]
          ]
        }
      ],
      "import/no-import-module-exports": "off",
      "no-restricted-imports": [
        "error",
        {
          "name": "lodash",
          "message": "Please use single imports of lodash functions, e.g `import isEqual from \"lodash/isEqual\"` instead of `import { isEqual } from \"lodash\"`"
        }
      ]
    }
  }
}